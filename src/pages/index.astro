---
import Layout from "../layouts/cabezera.astro";
import Char from "../components/react/Char.jsx";
import { API_BASE_URL } from '../astro.config.js';
---
<Layout title="Housinger" fondo="blue">
    <main style="height: auto, backgorund-color: white">
        <div class="fondo-menu ">
            <div class="flex gap-10 font-bold justify-center">
            </div>
            <div class="flex justify-center">
                <div class="buscador h-[55px] w-[376px] rounded-[50px] mt-[20px] mb-[20px] lg:h-[77px] lg:w-[714px]">
                    <div class="flex justify-center items-center lg:mt-3 gap-2">
                        <div class="esconde">
                            <p class="ml-5">Destino</p>
                            <input id="buscador-destino" type="text" class="h-[28px] w-[300px] lg:h-[30px] lg:w-[190px] pl-[20px] pr-[20px] caja" placeholder="Buscar vivienda" />
                        </div>
                        <div class="raya esconde"></div>
                        <div class="ml-[20px] esconde">
                            <p>Fecha entrada</p>
                            <input id="fecha-entrada" type="date" class="lg:h-[30px] lg:w-[150px]">
                        </div>
                        <div class="raya esconde"></div>
                        <div class="ml-[20px] esconde">
                            <p class="">Fecha salida</p>
                            <input id="fecha-salida" type="date" class="lg:h-[30px] lg:w-[150px]">
                        </div>
                        <div>
                            <button class="btn w-[310px] bg-white mt-[2px] esconde2" onclick="my_modal_3.showModal()" style="border: none;">Buscar destino y fechas</button>
                            <dialog id="my_modal_3" class="modal">
                                <div class="modal-box">
                                    <form method="dialog">
                                        <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">✕</button>
                                    </form>
                                    <h3 class="font-bold text-lg">¿Donde quieres ir?</h3>
                                    <div class="buscador h-[55px] w-[300px] md:w-[376px] rounded-[10px] mt-[20px] mb-[20px] lg:h-[77px] lg:w-[714px]">
                                        <input type="text" id="buscador-destino2" class="h-[28px] w-[270px] md:w-[356px] lg:h-[30px] lg:w-[190px] pl-[20px] pr-[20px] mt-[10px] ml-[10px] caja" placeholder="Buscar vivienda" />
                                    </div>
                                    <h3 class="font-bold text-lg">Fecha de entrada:</h3>
                                    <input type="date" id="fecha-entrada2" class="h-[48px]  w-[300px] md:w-[380px] lg:h-[30px] lg:w-[190px] p-[8px] rounded-[10px] calendario">
                                    <h3 class="font-bold text-lg mt-5">Fecha de salida:</h3>
                                    <input type="date" id="fecha-salida2" class="h-[48px] w-[300px] md:w-[380px] lg:h-[30px] lg:w-[190px] p-[8px] rounded-[10px] calendario">
                                    <br>
                                    <button type="submit" id="botonBuscar2" class="botonBuscar text-white px-4 py-2 rounded-md mt-5">Buscar</button>
                                </div>
                            </dialog>                        
                        </div>
                        <button class=" esconde boton-buscar flex justify-center items-center h-[28px] w-[30px] lg:h-[51px] lg:w-[53px] rounded-[50px]" id="botonbuscar">
                            <i class="icon-[ph--magnifying-glass-bold] text-fuchsia-50 lg:w-[26px] lg:h-[25px]"></i>
                        </button>
                    </div>
                    <dialog id="my_modal_error" class="modal">
                        <div class="modal-box">
                        
                            <h3 class="font-bold text-lg">Error de Fechas</h3>
                            <p id="error-message" class="mt-4"></p>
                            <button class="botonBuscar text-white px-4 py-2 rounded-md mt-5" onclick="my_modal_error.close()">Cerrar</button>
                        </div>
                    </dialog>
                    
                </div>
            </div>
        </div>
        <div class="min-h-screen">
            <Char url={`${API_BASE_URL}/v1/characteristic/get/all`} client:only="svelte" />
        </div>
       
    <script>
 document.addEventListener('DOMContentLoaded', function() {
    const locationInput = document.getElementById('buscador-destino');
    const startDateInput = document.getElementById('fecha-entrada');
    const endDateInput = document.getElementById('fecha-salida');
    const botonBuscar = document.getElementById('botonbuscar');

    const locationInput2 = document.getElementById('buscador-destino2');
    const startDateInput2 = document.getElementById('fecha-entrada2');
    const endDateInput2 = document.getElementById('fecha-salida2');
    const botonBuscar2 = document.getElementById('botonBuscar2');

    const errorMessageElement = document.getElementById('error-message');
    const errorModal = document.getElementById('my_modal_error');

    function showError(message) {
        errorMessageElement.textContent = message;
        errorModal.showModal();
    }

    function validateDates(startDate, endDate) {
        if (!startDate && !endDate) {
            return true; // No hay fechas, la validación es exitosa
        }

        if (!startDate || !endDate) {
            showError("Debes ingresar tanto la fecha de entrada como la fecha de salida.");
            return false;
        }

        const today = new Date();
        const start = new Date(startDate);
        const end = new Date(endDate);

        if (start <= today || end <= today) {
            showError("Las fechas deben ser posteriores al día de hoy.");
            return false;
        }

        if (start >= end) {
            showError("La fecha de entrada debe ser anterior a la fecha de salida.");
            return false;
        }

        return true;
    }

    function performSearch(destination, startDate, endDate) {
        const baseURL = window.location.href.split('?')[0];
        const queryParams = new URLSearchParams();
        queryParams.set('destination', destination);
        queryParams.set('startDate', startDate);
        queryParams.set('endDate', endDate);
        const updatedURL = `${baseURL}?${queryParams.toString()}`;

        window.history.pushState({ path: updatedURL }, '', updatedURL);
        window.location.reload();
    }

    botonBuscar.addEventListener('click', () => {
        const destination = locationInput.value;
        const startDate = startDateInput.value;
        const endDate = endDateInput.value;

        if (validateDates(startDate, endDate)) {
            performSearch(destination, startDate, endDate);
        }
    });

    botonBuscar2.addEventListener('click', () => {
        const destination = locationInput2.value;
        const startDate = startDateInput2.value;
        const endDate = endDateInput2.value;

        if (validateDates(startDate, endDate)) {
            performSearch(destination, startDate, endDate);
        }
    });

    // Si existen query parameters, los añadimos a los inputs
    const urlParams = new URLSearchParams(window.location.search);
    const destination = urlParams.get('destination');
    const startDate = urlParams.get('startDate');
    const endDate = urlParams.get('endDate');

    if (destination) {
        locationInput.value = destination;
        locationInput2.value = destination;
    }

    if (startDate) {
        startDateInput.value = startDate;
        startDateInput2.value = startDate;
    }

    if (endDate) {
        endDateInput.value = endDate;
        endDateInput2.value = endDate;
    }
});


    </script>
    </main>
    <style>
        :root {
            --primary: #576cbc;
            --secondary: #0b2447;
            --tertiary: #b1ddec;
            --gris: #948e8e;
            --star: #ffd910;
            --menu: #a5d7e8;
        }
        .bg-secondary {
        background-color: var(--gris) !important;
        }
        body, html,  main {
            background-color: #ffff !important;
        }
        .ddd {
            display: flex;
            flex-direction: column;
        }
        .fondo-menu {
            font-size: 16px;
            background-color: var(--menu);
        }

        .buscador {
            background-color: white;
            border: 1px solid var(--gris);
            box-shadow: 0px 2px 5px 0px var(--gris);
        }

        .boton-buscar {
            background-color: var(--primary);
        }

        .caja {
            border: none;
            outline: none;
        }

        .raya {
            height: 40px;
            border: 1px solid rgb(196, 194, 194);
        }

        .textos {
            text-align: left;
            color: var(--gris);
        }

        .botonBuscar {
            background-color: var(--primary);
        }

        .calendario {
            border: 1px solid #ccc; 
            font-size: 14px;
        }

        .filtro {
            border: 1px solid var(--gris);
            box-shadow: 0px 2px 5px 0px var(--gris);
            height: 35px;
            width: 80px;
            border-radius: 50px;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-left: 10px;
        }

        @media screen and (max-width: 1023px) {
        .esconde {
            display: none;
        }
        }

        @media screen and (min-width: 1024px){
            .esconde2 {
                display: none;
            }
        }

        @media screen and (max-width: 1824px){
            .esconde3 {
                display: none;
            }
        }
    </style>
</Layout>