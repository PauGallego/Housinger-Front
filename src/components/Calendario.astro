<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Calendario</title>
    <style>
        .calendar {
            max-width: 600px;
            margin: 0 auto;
            text-align: center;
        }

        .month {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 10px;
            color: green;
        }

        .dropdown {
            margin-bottom: 10px;
        }

        .dropdown select {
            padding: 5px;
            font-size: 16px;
            border-radius: 5px;
            background-color: #efefef;
            border: none;
            height: 50px;
            font-weight: bold;
            width: 200px;
        }

        .days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
        }

        .day {
            padding: 10px;
            cursor: pointer;
        }

        .placeholder {
            visibility: hidden;
        }

        .contendor-calendario {
            width: 100%;
        }

        @media screen and (width: 768px) {
            .contendor-calendario {
                width: 75%;
            }
        }

        @media screen and (width: 768px) {
            .dropdown select {
                width: 200px;
            }
        }

        @media screen and (width: 1440px) {
            .dropdown select {
                width: 170px;
            }
        }
    </style>
</head>

<body>
<div class="contendor-calendario mb-10">
    <div class="calendar">
        <div class="dropdown flex gap-2">
            <select id="monthSelect"></select>
            <select id="yearSelect"></select>
        </div>
        <div class="days" id="days"></div>
    </div>
</div>

<script>
    const monthElement = document.getElementById("month");
    const daysElement = document.getElementById("days");
    const monthSelect = document.getElementById("monthSelect");
    const yearSelect = document.getElementById("yearSelect");

    let startDate = null;
    let endDate = null;

    function renderCalendar() {
        let monthIndex = parseInt(monthSelect.value);
        let year = parseInt(yearSelect.value);

        const currentDate = new Date(year, monthIndex, 1);

        const firstDayOfMonth = new Date(year, monthIndex, 1);
        const lastDayOfMonth = new Date(year, monthIndex + 1, 0);
        const numDaysInMonth = lastDayOfMonth.getDate();
        let startingDayOfWeek = firstDayOfMonth.getDay();

        // Ajustar para que el calendario empiece desde el lunes
        if (startingDayOfWeek === 0) {
            startingDayOfWeek = 7;
        }

        daysElement.innerHTML = "";

        const dayNames = [
            "Lun",
            "Mar",
            "Mié",
            "Jue",
            "Vie",
            "Sáb",
            "Dom",
        ];

        // Agregar los nombres de los días de la semana
        for (let i = 0; i < 7; i++) {
            const dayNameElement = document.createElement("div");
            dayNameElement.classList.add("day", "day-name");
            dayNameElement.textContent = dayNames[i];
            daysElement.appendChild(dayNameElement);
        }

        for (let i = 0; i < startingDayOfWeek - 1; i++) {
            const placeholder = document.createElement("div");
            placeholder.classList.add("day", "placeholder");
            daysElement.appendChild(placeholder);
        }

        for (let day = 1; day <= numDaysInMonth; day++) {
            const dayElement = document.createElement("div");
            dayElement.classList.add("day");

            // Comprueba si la fecha es anterior a la fecha actual
            const currentDay = new Date(year, monthIndex, day);
            const currentDateFormatted = new Date().setHours(0, 0, 0, 0);

            if ((startDate && currentDay >= startDate && currentDay <= endDate) || (endDate && currentDay >= endDate && currentDay <= startDate)) {
                dayElement.style.backgroundColor = "lightblue";
            }

            if (currentDay.getTime() === startDate?.getTime() || currentDay.getTime() === endDate?.getTime()) {
                dayElement.style.border = "1px solid #000";
            }

            if (currentDay < currentDateFormatted && currentDay !== currentDateFormatted) {
                dayElement.style.color = "red";
                dayElement.style.textDecoration = "line-through";
            } else {
                dayElement.addEventListener("click", () => {
                    if (!startDate || (startDate && endDate)) {
                        startDate = currentDay;
                        endDate = null;
                    } else {
                        if (currentDay > startDate) {
                            endDate = currentDay;
                        } else {
                            endDate = startDate;
                            startDate = currentDay;
                        }
                    }
                    renderCalendar();
                });
            }

            dayElement.textContent = day;
            daysElement.appendChild(dayElement);
        }
    }

    function populateYearSelect() {
        const currentYear = new Date().getFullYear();
        for (let year = currentYear; year <= currentYear + 10; year++) {
            const option = document.createElement("option");
            option.value = year;
            option.textContent = year;
            yearSelect.appendChild(option);
        }
    }

    function populateMonthSelect() {
        const currentMonth = new Date().getMonth();
        for (let month = 0; month < 12; month++) {
            const option = document.createElement("option");
            option.value = month;
            option.textContent = new Date(0, month).toLocaleString("default", { month: "long" });
            if (month === currentMonth) {
                option.selected = true;
            }
            monthSelect.appendChild(option);
        }
    }

    populateMonthSelect();
    populateYearSelect();
    renderCalendar();

    monthSelect.addEventListener("change", renderCalendar);
    yearSelect.addEventListener("change", renderCalendar);
</script>
</body>
</html>